@tailwind base;
@tailwind components;
@tailwind utilities;

.bg-root {
  background-color: rgb(215, 213, 212);
}
.bg-root-secondary {
  background-color: rgb(243, 235, 228);
}
.bg-popup {
  background-color: rgb(180, 180, 180);
}
.text-root {
  color: rgb(215, 213, 212);
}
.text-emerald {
  color: rgb(103, 173, 123);
}

@font-face {
  font-family: 'PixelifySans';
  src: url('../../public/fonts/Press_Start_2P/PressStart2P-Regular.ttf')
    format('truetype');
}
.pixel-font {
  font-family: 'PixelifySans';
}

@font-face {
  font-family: 'KumbhSans';
  src: url('../../public/fonts/Kumbh_Sans/KumbhSans-Medium.ttf')
    format('truetype');
}
@font-face {
  font-family: 'KumbhSansBold';
  src: url('../../public/fonts/Kumbh_Sans/KumbhSans-Bold.ttf')
    format('truetype');
}
@font-face {
  font-family: 'KumbhSansExtraBold';
  src: url('../../public/fonts/Kumbh_Sans/KumbhSans-ExtraBold.ttf')
    format('truetype');
}
@font-face {
  font-family: 'KumbhSansLight';
  src: url('../../public/fonts/Kumbh_Sans/KumbhSans-Light.ttf')
    format('truetype');
}

img {
  border-radius: 4px;
}

@layer components {
  .btn {
    @apply rounded-full border-black border-2 font-bold;
  }
}
@layer components {
  .homepage-btn {
    @apply py-2 w-60 text-3xl;
  }
}
@layer components {
  .btn-dark {
    @apply bg-black text-white hover:bg-white hover:text-black;
  }
}
@layer components {
  .btn-light {
    @apply hover:bg-gray-500 hover:text-white;
  }
}
@layer components {
  .icon {
    @apply w-14 h-14 cursor-pointer bg-black rounded-full p-2;
  }
}

.arrow-down {
  animation: moveUpDown 2s ease-in-out infinite;
}

@keyframes moveUpDown {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(20px); /* Adjust the movement distance as needed */
    animation-timing-function: cubic-bezier(
      0,
      0,
      0.58,
      1
    ); /* Fast downwards motion */
  }
}

.retro-border {
  border-color: rgb(56, 56, 56);
  border-style: solid;

  border-top-color: #e6e6e6;
  border-left-color: #e6e6e6;
}

.half-circle {
  width: 40vw; /* 40% of the viewport width */
  height: 40vh; /* Making the height equal to the width to get a circle */
  border: solid black 2px;
  position: absolute; /* Absolute positioning */
  transform: translateX(-50%); /* Center horizontally */
}
.upper-circle {
  border-radius: 0 0 9999px 9999px; /* Rounded bottom */
  top: 0; /* Align to top */
  left: 50%; /* Start at half the width of the container */
  clip-path: inset(2px 0 0 0); /*Clips the upper half of the circle*/
}
.lower-circle {
  border-radius: 9999px 9999px 0 0; /* Rounded top */
  bottom: 0; /* Align to bottom */
  left: 50%; /* Start at half the width of the container */
  clip-path: inset(0 0 2px 0); /*Clips the bottom half of the circle*/
}
